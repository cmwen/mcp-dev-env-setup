name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci --include=dev
      
      - name: Run tests
        run: |
          npm run lint
          npm run build
      
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
      
      - name: Extract changelog
        id: changelog
        run: |
          # Extract changelog for this version
          if [ -f CHANGELOG.md ]; then
            sed -n "/## \[${{ steps.get_version.outputs.version }}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
            if [ ! -s release_notes.md ]; then
              echo "Release ${{ steps.get_version.outputs.version }}" > release_notes.md
            fi
          else
            echo "Release ${{ steps.get_version.outputs.version }}" > release_notes.md
          fi
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.version, '-') }}
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish to npm
        if: ${{ !contains(steps.get_version.outputs.version, '-') }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true

  build-binaries:
    name: Build Binaries
    needs: release
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: macos
            arch: x64
          - os: macos-latest
            platform: macos
            arch: arm64
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --include=dev
      
      - name: Build
        run: npm run build
      
      - name: Create tarball
        run: |
          tar -czf devenv-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz \
            dist/ \
            package.json \
            README.md \
            LICENSE
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: devenv-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
